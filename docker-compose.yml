name: "Portfolio-Website"

### SERVICES
services:

  ### 1. POSTGRES DB ==> OK
  db:
    container_name: "1__postgres_db"
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER},   # from our .env file the variables are replaced
      interval: 2s  # interval between checks
      timeout: 10s  # timeout in seconds
      retries: 5    # how often try to restart the service
      start_period: 30s # any error does not count as error


  ### 2. ADMINER  ==> OK
  adminer:
    container_name: "2__adminer"
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db


  ### 3. CREATE CUSTOM IMAGE WITH DJANGO APP
  djangoapp:
    container_name: "3__create_django_app"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped   # restart the container if it fails, but not if it was stopped
    command: > 
      sh -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --noinput
      && python manage.py runserver 0.0.0.0:8000"
    init: true   # will pass the stop-command to the Dockerfile
    volumes:
      - .:/code # binds the current directory to the container
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db








### VOLUMES
volumes:
  postgres_data: #  no configuration required --> this is linked to the postgres_data volume
